%%
% Generates a GEM for Geobacillus LC300 based on homology of its protein sequences to orthologs in KEGG.
% Both RAVEN and COBRA are used to generate this model, remember to
% initiate the cobra toolbox as you will get an error otherwise.

clear

% Loading of the basic model generated by RAVEN. Can be replaced by the Raven model generation function using the following settings:Remove spontaneous, 
% undefined, inclomplete and general. CutOff=10^-50. 
% MinScoreRatioG=0.9. MinScoreRationKO=0.3. maxPhylDist=0. nSequences=Inf. seqIdentity=1
model1=load('gel_base_model.mat')
  

% The base KEGG gel model for gene comparison
model=load('gel_reference_model');

model1.comps{1,1}='c';
model1.compNames{1,1}='Cytosol';
model1.comps{2,1}='e';
model1.compNames{2,1}='Extracellular';

% Corrects reaction reversibility based on thermodynamics calculations by
% eQuilibrator. See separate python script.
correctreversibility

%Converts metabolite formulas and charges to MetaCyc format.
kegg2metacyc

% Adds necessary gap-filling reactions 
Addreactions

% Removes unecessary and faulty reactions.
Removereactions

%Adds reactions necessary for biomass-formation
Biomassreactions

%Corrects reversibility of some reactions not picked up by or incorrectly predicted by
%eQuilibrator
Reactioncorrect


%%
% maintenance
model1=setParam(model1, 'ub', {'R00086'}, 1000);
model1=setParam(model1, 'lb', {'R00086'}, 10);


% Glucose utilization rate: (Cordova: 30.6 mmol/gDW/h, Ljungvist: 16.05
% mmol/gDW/h)
model1=setParam(model1, 'lb', {'EX_Glucose'}, -16.05);


% Xylose utilization rate: Cordova: 34.9 mmol/gDW/h, Ljungqvist: 13.61)
model1=setParam(model1, 'lb', {'EX_Xylose'}, 0);


% No qS available, but roughly correct growth rate with 12.5 mmol/gDW/h
model1=setParam(model1, 'lb', {'EX_Mannose'}, 0);

% No qS available, but roughly correct growth rate with 10 mmol/gDW/h
model1=setParam(model1, 'lb', {'EX_Galactose'}, 0);

% Parameter set to match fluxes from 13C analysis of Cordova et al. (2017)
% Flux through acetate export 11.62 mmol/gDW/h on glucose. 


%For glucose: Cordova: -48.53, Ljungqvist: -34.41
model1=setParam(model1, 'lb', {'EX_Oxygen'}, -34.41);

%Xylose: Cordova: -73.1, Ljungqvist: -32.74
%model1=setParam(model1, 'lb', {'EX_Oxygen'}, -32.74);

% Solve for biomass production
model1=setParam(model1,'obj',{'Biomass'},1);
                                                        

%Checks for unbalanced reactions and metabolites without metFormula, 
% automatically computes the formulas and balances reactions with H+. 
% Also removes reactions with carbon and oxygen imbalance. 
checkbalance

% Removes metabolites not taking part in any reaction in the model.
removeunusedmets

% Update gene-relations to add genes predicted by KEGG but not picked upp
% by RAVEN
findgenesinKEGGgel


%Fixing some details to allow for export as sbml structure. 

%model.metCharges is not recognized. model.metCharge used instead.
model1.metCharge=model1.metCharges;
model1=rmfield(model1, 'metCharges');

%metFormulas of biomass components not really needed (They are calculated earlier in checkbalance script). 
%The formulas are calculated as fractions, and only integers are allowed in an sbml-structure. Good to use for check of biomass
%molweight, otherwise not really needed.
biomass_components={'Protein', 'RNA', 'DNA', 'Cellwall', 'CofactorPool', 'Cellmembrane', 'Teichuronic_acid', 'Peptidoglycan', 'Glycogen', 'Biomass'};
for i=1:length(biomass_components)
    model1.metFormulas{find(contains(model1.mets, biomass_components(i)))}='';
end


sol=solveLP(model1, 1);
printFluxes(model1, sol.x, false);
